/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package dictionary;


import java.util.ArrayList;
import javax.swing.DefaultListModel;

import javax.xml.parsers.*;
import org.w3c.dom.*;
import java.io.*;
import java.text.ParseException;
import java.util.Collections;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.List;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.StringTokenizer;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
public class Bai3 extends javax.swing.JFrame {

    /**
     * Creates new form Bai3
     */
    public Bai3() {
        try{
            // Làm đẹp giao diện
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());}
        catch(Exception e){};
        initComponents();
        
        
//         String languages[]={"Anh_Viet","Viet_Anh"};        
//        final JComboBox cb=new JComboBox(languages);    
//        cb.setBounds(240,12,90,30);
//        this.add(cb);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        textPane = new javax.swing.JTextPane();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox<>();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        txf2 = new javax.swing.JTextField();
        txf3 = new javax.swing.JTextField();
        jButton5 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jList1.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jList1ValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(jList1);

        textPane.setContentType("text/html"); // NOI18N
        textPane.setFocusable(false);
        jScrollPane2.setViewportView(textPane);

        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField1KeyTyped(evt);
            }
        });

        jButton1.setText("Search");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Reset List");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Anh_Viet", "Viet_Anh" }));
        jComboBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox1ItemStateChanged(evt);
            }
        });
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jButton3.setText("Add word");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Show my word list(AZ)");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Statistic");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jLabel1.setText("From(dd/MM/YYYY):");

        jLabel2.setText("To:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jTextField1)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 230, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButton1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton3))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txf2, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txf3, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton4))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3)
                    .addComponent(jButton4))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 433, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txf2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txf3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton5)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 396, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private DefaultListModel<String> mod;
    private ArrayList<Data> arr;
    private String findName;
    //chi so khi tim thay mod 1
    private int num;
    private boolean checkSearch = false;
    private String fileNameXml = "Anh_Viet.xml";
    //chứa từ điển việt anh
    private DefaultListModel<String> mod2;
    private ArrayList<Data> arr2;
    private int num2;
    //tu va nghia luu ra file
    private String word1;
    private String mean1; 
     private MyWord myWord = new MyWord();       
     //thong ke
     SimpleDateFormat formatter = new SimpleDateFormat("dd/MM/yyyy");
      private MyWord searchWord = new MyWord();       
    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        mod = new DefaultListModel<>();
        jList1.setModel(mod);
        arr = new ArrayList<>();
        //mới vào mặc định là anh việt
        mod2 = new DefaultListModel<>();
        arr2 = new ArrayList<>();
//        Data obj = new Data("Apple", "Tao");
//        arr.add(obj);
//        //them vao list
//        mod.addElement(obj.getText());
//        obj = new Data("Orange ", "cam");
//        arr.add(obj);
//        //them vao list
//        mod.addElement(obj.getText());
        

        //--------read xml ----------/

        read(fileNameXml, mod, arr);
        read("Viet_Anh.xml", mod2, arr2);
        
        //xử lí lọc ngày
        Date date = new Date();
        
        String strDate = formatter.format(date);
        //System.out.println(strDate);
        txf2.setText(strDate);
       // txf3.setText(strDate);
       
       StringTokenizer st = new StringTokenizer(strDate, "/");
       String[] s = new String[3];
       int i = 0;
        while (st.hasMoreTokens()) {
           //System.out.println(st.nextToken());
           s[i] = st.nextToken();
            //System.out.println(s[i] );
          i++;
        }

        //String a = s[0];
            int k = Integer.parseInt(s[0]);
            k++;
            txf3.setText(String.valueOf(k) + "/" + s[1] + "/" + s[2]);
    }//GEN-LAST:event_formWindowOpened
    
    //ham đọc file xml
    private void read(String fileName, DefaultListModel<String> mod0, ArrayList<Data> arr0){
        //--------read xml ----------//
try {
           
            
            DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
            DocumentBuilder builder = factory.newDocumentBuilder();
            
            File f = new File(fileName);
            Document document = builder.parse(f);
            
            Element root = document.getDocumentElement();
//            System.out.println("ROOT: " + root.getNodeName());
            
            NodeList list =  root.getElementsByTagName("record");
            //duyệt và đọc vào 
            for (int i = 0; i < list.getLength(); i++) {
               Node word = list.item(i);
                Element element = (Element) word; 
                String w = element.getElementsByTagName("word").item(0).getTextContent();
//                System.out.println("word: " + w);
                String w1 = element.getElementsByTagName("meaning").item(0).getTextContent();
//                System.out.println("meaning: " + w1);
                Data h = new Data(w, w1);
                arr0.add(h);
                mod0.addElement(h.getText());
            }
            
        } catch (Exception ex) {
            System.out.println("ERROR");
        }

//---------------//
    }
    
    private void jList1ValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jList1ValueChanged
        // TODO add your handling code here:
        if(fileNameXml.equals("Anh_Viet.xml")){
            if(!jList1.isSelectionEmpty() ){
                if(checkSearch == false){
                int i = jList1.getSelectedIndex();
                Data obj = arr.get(i);
                textPane.setText(obj.getDec());
                }else{
                //an button search no phai cong them 1 khoang nua
                int i = num + jList1.getSelectedIndex();
                Data obj = arr.get(i);
                textPane.setText(obj.getDec());

                }
            }
        }else{
            if(!jList1.isSelectionEmpty() ){
                if(checkSearch == false){
                int i = jList1.getSelectedIndex();
                Data obj = arr2.get(i);
                textPane.setText(obj.getDec());
                }else{
                //an button search no phai cong them 1 khoang nua
                int i = num2 + jList1.getSelectedIndex();
                Data obj = arr2.get(i);
                textPane.setText(obj.getDec());

                }
            }
        }        
    }//GEN-LAST:event_jList1ValueChanged
//khi bam nut search goi ham nay  
    private void check(){
           if(fileNameXml.equals("Anh_Viet.xml")){
                String value1 = "";
                String text = findName;
                //tu ma ta tim kiemê luu ra file
                word1 = text;
                
                text = text.trim().toLowerCase();
                DefaultListModel<String> mod1 = new DefaultListModel<>();
                //mod.clear();
                for (int i = 0; i < arr.size(); i++) {
                    String value = "" + arr.get(i).getText();
                    value1 = value;
                    value = value.toLowerCase();
                    if(value.startsWith(text)){
                        mod1.addElement(value1);
                        jList1.setSelectedIndex(i);
                        //System.out.println(value1);
                        textPane.setText(arr.get(num).getDec()); //lay tai vt trong mod
                        
                        //khi textPane set text thi nghia cua tu cx đuoc luu lai
                        mean1 = arr.get(num).getDec();
                        
                       
                        
                }

            }
                jList1.setModel(mod1);
                checkSearch = true;
                jList1.setSelectedIndex(0); //hien dang chon o do
           }else {
               String value1 = "";
                String text = findName;
                //tu ma ta tim kiemê luu ra file
                word1 = text;
                
                text = text.trim().toLowerCase();
                DefaultListModel<String> mod3 = new DefaultListModel<>();
                //mod.clear();
                for (int i = 0; i < arr2.size(); i++) {
                    String value = "" + arr2.get(i).getText();
                    value1 = value;
                    value = value.toLowerCase();
                    if(value.startsWith(text)){
                        mod3.addElement(value1);
                        jList1.setSelectedIndex(i);
                        //System.out.println(value1);
                        textPane.setText(arr2.get(num2).getDec()); //lay tai vt trong mod
                        
                         //khi textPane set text thi nghia cua tu cx đuoc luu lai
                        mean1 = arr2.get(num2).getDec();

                }

            }
                jList1.setModel(mod3);
                checkSearch = true;
                jList1.setSelectedIndex(0); //hien dang chon o do
                
                
           }
           
            
            
        if(word1.isEmpty() != true && mean1.isEmpty() != true){
           //doc vao search_word
            Date date1 = null;
            Date date2 = null;
            try {
                date1 = formatter.parse("01/01/2000");
                date2 = formatter.parse(txf3.getText());
            
            } catch (ParseException e) {
                  System.out.println("ParseException");
            }
          //xử lí TH nó đọc vô nó lấy ngày mặc định hôm nay là khúc trk k thỏa mãn nên bỏ hết
            System.out.println("==========Bấm nút SEARCH ============");
         String line = readWord("search_word.txt", date1.getTime(), date2.getTime());
           // System.out.println(line);
          // System.out.println(readWord("search_word.txt"));
           //luu file tu da tra
            try (
                //ghi file
                ObjectOutputStream oos = new ObjectOutputStream(new FileOutputStream(new File("search_word.txt")))) {
            // create 
            Date now = new Date();
            long curr = now.getTime();
            Data data = new Data(word1, mean1, 0, curr); //thêm từ ms search vào , mỗi từ có time là 1 ngày riêng
            searchWord.getWord().add(data);
            //***********
            

            // write 
           // System.out.println(myWord.toString());
            oos.writeObject(searchWord);
            System.out.println("Success...");
            oos.close();
        } catch (IOException ex) {
                System.out.println("IOException");
        }
       }
}
    private void jTextField1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyTyped
        // TODO add your handling code here:
        String value1 = "";
        String text = jTextField1.getText().trim();
        
        
        text += evt.getKeyChar();
        findName = text;
        text = text.trim().toLowerCase();
        //System.out.println(text);
        if(fileNameXml.equals("Anh_Viet.xml")){
            for (int i = 0; i < mod.size(); i++) {
                String value = "" + mod.getElementAt(i);
                value1 = value;
                value = value.toLowerCase();
                if(value.startsWith(text)){
                    jList1.setSelectedIndex(i);
                    num = i;
                    return;
                }
            }
            textPane.setText("This word is not found");
            jList1.clearSelection();
        } else {
            for (int i = 0; i < mod2.size(); i++) {
                String value = "" + mod2.getElementAt(i);
                value1 = value;
                value = value.toLowerCase();
                if(value.startsWith(text)){
                    jList1.setSelectedIndex(i);
                    num2 = i;
                    return;
                }
            }
            textPane.setText("This word is not found");
            jList1.clearSelection();
        }
    }//GEN-LAST:event_jTextField1KeyTyped
//an search
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // ô đầu trống 
       
        if(jTextField1.getText().equalsIgnoreCase("") == false  ){
            
                 check();
      
        }else{
             JOptionPane.showMessageDialog(this, "Ban phai nhap vao tu de search!");
        }
        
       
    }//GEN-LAST:event_jButton1ActionPerformed
//an reset
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        //truoc khi tim 1 tu moi phai ve mac dinh
        if(fileNameXml.equals("Anh_Viet.xml")){
            jList1.setModel(mod);
            num = 0; 
            checkSearch = false;
        }else {
            fileNameXml = "Viet_Anh.xml";
            jList1.setModel(mod2);
            num2 = 0; 
            checkSearch = false;
        }
         //khi an reset no ve rong het
        textPane.setText("");
        jTextField1.setText("");
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jComboBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox1ItemStateChanged
        // TODO add your handling code here:
        
//        System.out.println(jComboBox1.getItemAt(jComboBox1.getSelectedIndex()));
        String tam = jComboBox1.getItemAt(jComboBox1.getSelectedIndex());

        if(tam.equals("Viet_Anh")){
            fileNameXml = "Viet_Anh.xml";
             jList1.setModel(mod2);
                num2 = 0; 
                checkSearch = false;
        }else {
            fileNameXml = "Anh_Viet.xml";
             jList1.setModel(mod);
            num = 0; 
            checkSearch = false;
        }

    }//GEN-LAST:event_jComboBox1ItemStateChanged

    //khi click add
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
      
        
       if(word1.isEmpty() != true && mean1.isEmpty() != true){
           //doc ds cũ lên r ms ghi tiếp
           String line = readLineFile("my_word1.txt"); 
        try (
                //ghi file
                ObjectOutputStream oos = new ObjectOutputStream(new FileOutputStream(new File("my_word1.txt")))) {
            // create 
             Date now = new Date();
            long curr = now.getTime();
            Data data = new Data(word1, mean1, 0, curr);
            myWord.getWord().add(data);
            // write 
           // System.out.println(myWord.toString());
            oos.writeObject(myWord);
            System.out.println("Success...");
        } catch (IOException ex) {
             System.out.println("IOException");
        }

       }
 
//        System.out.println("- word: " + word1);
//         System.out.println("- meaning: " + mean1);
    }//GEN-LAST:event_jButton3ActionPerformed

    //an show
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        Edit e1 = new Edit();
        
         e1.f.setVisible(true);
         
         String line = readLineFile("my_word1.txt"); //hàm đọc file từ tập tin được chọn vào
         e1.ta.setText(line);
    }//GEN-LAST:event_jButton4ActionPerformed
//thong ke
    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
         Date date1 = null;
         Date date2 = null;
          try {
           date1 = formatter.parse(txf2.getText());
           date2 = formatter.parse(txf3.getText());
            
        } catch (ParseException e) {
              System.out.println("ParseException");
        }
          
        Edit e1 = new Edit();
        
         e1.f.setVisible(true);
        //nếu date1 < date 2 mới làm
        if(date1.getTime() <= date2.getTime()){
         String line = readWord("search_word.txt", date1.getTime(), date2.getTime()); //hàm đọc file từ tập tin được chọn vào
         e1.ta.setText(line);
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Bai3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Bai3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Bai3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Bai3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
               Bai3 j = new Bai3();
               j.setVisible(true);
               j.setTitle("Dictionary");
               j.setLocationRelativeTo(null);
            }
        });
    }
//read file my_word.txt
public String readLineFile(String fileName) {
   
    
    ObjectInputStream ois = null;
    String dulieu = "";
   // Data data = null;
    myWord.getWord().clear();
        try {
            
            ois = new ObjectInputStream(new FileInputStream(new File(fileName)));
            // read
            if(myWord == null)
                myWord = new MyWord();
            myWord = (MyWord) ois.readObject();
            //neu ban dau chu co file
            if(myWord != null){
                
//                System.out.println(myWord.getWord().size());
//                System.out.println(myWord.toString()); 
                
                List<Data> list = new LinkedList<Data>();
                for (int i = 0; i < myWord.getWord().size(); i++) {

                           list.add(myWord.getWord().get(i));

                         }
                // sort
                 Collections.sort(list, new WordAZ());
                 Iterator<Data> it = list.iterator();
                 int i = 0;
                 //ds cập nhật khi sort xong
                 MyWord after = new MyWord();
                 while(it.hasNext()){
                     //System.out.println(it.next().getText());
                    after.getWord().add(it.next());
                   // System.out.println(after.getWord().get(i).getText());
                 i++;
                 }
                 //sau khi update ta cap nhat lại
                myWord.setWord(after);
               dulieu = myWord.toString();
            }else {
                System.out.println("file not exits!");
            }
            
            
             ois.close();
        } catch (ClassNotFoundException ex) {
            System.out.println("ClassNotFoundException");
        } catch (IOException ex) {
            System.out.println("IOException");
        } 

        
       
    
        return dulieu;
    }

//read file serch_word.txt trả về 1 chuỗi là từ + tần số + time ngày tìm kiếm 
public String readWord(String fileName, long date1, long date2) {
   
    
    ObjectInputStream ois = null;
    String dulieu = "";
     String noidung = "Danh sach tu da tra từ ngày " + txf2.getText() + " đến ngày " + txf3.getText() +" voi tan so: \n";
    searchWord.getWord().clear();
        try {
            System.out.println("date1: " + date1 + " ******** date2: " + date2);
            ois = new ObjectInputStream(new FileInputStream(new File(fileName)));
            // read
            if(searchWord == null)
                searchWord = new MyWord();
            searchWord = (MyWord) ois.readObject();
            //neu ban dau chu co file
            if(searchWord != null){
                
//                System.out.println(searchWord.getWord().size());
//                System.out.println(searchWord.toString()); 
                
                List<Data> list = new LinkedList<Data>();
                for (int i = 0; i < searchWord.getWord().size(); i++) {
                        //neu nam trong ngày tim kiếm
                        if(searchWord.getWord().get(i).getTime() >= date1 &&  searchWord.getWord().get(i).getTime() <= date2){
                              list.add(searchWord.getWord().get(i));
                        }
                         System.out.println("** word: " + searchWord.getWord().get(i).getText() + "  + time: " + searchWord.getWord().get(i).getTime() + "  +freq : " + searchWord.getWord().get(i).getFreq());

                }
                // sort
                 Collections.sort(list, new WordAZ());
                 Iterator<Data> it = list.iterator();
                 
                 //ds cập nhật khi sort xong
                 MyWord after = new MyWord();
                 while(it.hasNext()){
                     //System.out.println(it.next().getText());
                     //Search(word1, list);
                    after.getWord().add(it.next());
//                     System.out.println("==========================");
//                    System.out.println(after.getWord().get(i).getText());
//                    System.out.println(after.getWord().get(i).getFreq());
                 
                 }
                 
//****                //tăng tần số truy cập dùng cho chức năng thống kê trả về 1 chuỗi để hiển thị ra chô người dùng xử lí
                 int dem =0;
                 ArrayList<String> temp  = new ArrayList<String>();
                 //Myword mới để lưu danh sách k lặp lại
                 MyWord after1 =  new MyWord();
                 //after1.setWord(after);
                  for (int i1 = 0; i1 < after.getWord().size(); i1++) {
                      dem = Search(after.getWord().get(i1).getText(), after);
                      
                      if(hasName(after.getWord().get(i1).getText(), temp) == false) //từ này chưa có trong ds
                      {
                          temp.add(after.getWord().get(i1).getText());
                          after1.getWord().add(new Data(after.getWord().get(i1).getText(), after.getWord().get(i1).getDec(), after.getWord().get(i1).getFreq(), after.getWord().get(i1).getTime()));
                          setFeq(after.getWord().get(i1).getText(), after1, dem); //thay tất cả tần số cho after1 khi từ nào trùng
                      }
                   
                   }
                  //in thử
                  System.out.println("Danh sach: ");
                  for (int i1 = 0; i1 < after.getWord().size(); i1++) {
                     
                   System.out.println("--------------------------------");
                    System.out.println(after.getWord().get(i1).getText());
                    System.out.println(after.getWord().get(i1).getFreq());
                   
                   }
                  
                  //in thử
                  System.out.println("!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!");
                  System.out.println("Danh sach after1: ");
                  
                  for (int i1 = 0; i1 < after1.getWord().size(); i1++) {
                     
                      noidung += after1.getWord().get(i1).getText() + ":  " + after1.getWord().get(i1).getFreq() + "\n";
                    System.out.println(after1.getWord().get(i1).getText() + ":  " + after1.getWord().get(i1).getFreq());
                    
                   
                   }
//                 System.out.println("===========*****===============");
                 //System.out.println(after.toString());
                 //sau khi update ta cap nhat lại
                searchWord.setWord(after);
               dulieu = searchWord.toString();
            }else {
                System.out.println("file not exits!");
            }
            
            
             ois.close();
        } catch (ClassNotFoundException ex) {
            System.out.println("ClassNotFoundException");
        } catch (IOException ex) {
            System.out.println("IOException");
        } 
        
        
    
        return noidung;
    }
//method tim kiem trong list 1 tu  neu tim thay tra ve tan so cua tu do
public int Search(String find, MyWord word){
    int dem = 0;
    for (int i = 0; i < word.getWord().size(); i++) {
        boolean kt = word.getWord().get(i).getText().equalsIgnoreCase(find);
        if(kt == true){
             //word.getWord().get(i).setFreq( word.getWord().get(i).getFreq() + 1);
             dem++;
//             }else {        //neu no co 1 tam so cu the khac 0
//                 dem = dem + word.getWord().get(i).getFreq();
//             }
            
        }
                 
         
    }
    return dem;
}
//tăng
public void setFeq(String find, MyWord word, int dem){
    
    for (int i = 0; i < word.getWord().size(); i++) {
        boolean kt = word.getWord().get(i).getText().equalsIgnoreCase(find);
        if(kt == true){
             word.getWord().get(i).setFreq( dem);
            
        }
                 
         
    }
}
//ham kiem tra trong mang tu da tra co in ra chua
public boolean hasName(String name, ArrayList<String> a){
    for (int i = 0; i < a.size(); i++) {
       if(name.equalsIgnoreCase(a.get(i))){
           return true;
       }
    }
    return false;
}
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JList<String> jList1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextPane textPane;
    private javax.swing.JTextField txf2;
    private javax.swing.JTextField txf3;
    // End of variables declaration//GEN-END:variables
}
