
package jbdc_sql;
import java.awt.Image;
import java.io.*;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.ParseException;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

import javax.swing.UIManager;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

public class Bai1 extends javax.swing.JFrame {
    //mặc định
      private static String DB_URL;// = "jdbc:sqlserver://localhost:1189;"
           // + "databaseName=QLSV1;"
          //  + "integratedSecurity=true";
    private static String USER_NAME;// = "sa";
    private static String PASSWORD;// = "1234";
    String fileName = null;
    byte[] img  = null;
    static boolean checkconn = false;
    public static Connection getConnection(String dbURL, String userName, 
            String password) {
        Connection conn = null;
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            conn = DriverManager.getConnection(dbURL, userName, password);
            System.out.println("connect successfully!");
            checkconn = true;
        } catch (Exception ex) {
            System.out.println("connect failure!");
           checkconn = false;
             String err = ex.getMessage();
            if(err.equalsIgnoreCase("") == false)
                JOptionPane.showMessageDialog(null, ex.getMessage());
            ex.printStackTrace();
        }
        return conn;
    }
    
    
    public Bai1() {
        try{
            // Làm đẹp giao diện
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());}
        catch(Exception e){};
        initComponents();
        setLocationRelativeTo(null);
        Date date = new Date();
        
        String strDate = HocSinh.formatter.format(date);
        //System.out.println(strDate);
        txtNgaySinh.setText(strDate);
        
        //hien thi ds hs
        // show();
        
//        ArrayList<HocSinh> list = createList();
//        DefaultTableModel model = (DefaultTableModel)table1.getModel();
//        Object[] row = new Object[4];
//        for (int i = 0; i < list.size(); i++) {
//            row[0] = list.get(i).getMaHS();
//            row[1] = list.get(i).getTenHS();
//            row[2] = list.get(i).getNgaySinh();
//            row[3] = list.get(i).getGhiChu();
//            
//            model.addRow(row);
//        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        url = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        uname = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        pass = new javax.swing.JTextField();
        Connect = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtMaHs = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtTenHS = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtNgaySinh = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtPane = new javax.swing.JTextPane();
        btnThem = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        table1 = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        lbl_img = new javax.swing.JLabel();
        btnChoose = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        txtSearchMaHS = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtSearchTenHS = new javax.swing.JTextField();
        txtSearchNgaySinh = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtSearchGhiChu = new javax.swing.JTextPane();
        jLabel10 = new javax.swing.JLabel();
        btnSearch = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Quản lý học sinh"));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(51, 204, 255));
        jLabel1.setText("QUẢN LÝ HỌC SINH");

        jLabel11.setText("URL");

        url.setText("jdbc:sqlserver://localhost:1433;databaseName=QLSV1;");
        url.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                urlActionPerformed(evt);
            }
        });

        jLabel12.setText("USERNAME");

        uname.setText("sa");
        uname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                unameActionPerformed(evt);
            }
        });

        jLabel13.setText("PASSWORD");

        pass.setText("1234");

        Connect.setText("Connect to SQL");
        Connect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ConnectActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel11)
                .addGap(18, 18, 18)
                .addComponent(url)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(uname, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(pass, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Connect))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel11)
                    .addComponent(url, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12)
                    .addComponent(uname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13)
                    .addComponent(pass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Connect))
                .addContainerGap())
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Thông tin học sinh"));

        jLabel2.setText("Mã HS");

        txtMaHs.setEditable(false);

        jLabel3.setText("Tên HS");

        jLabel4.setText("Ngày sinh(YYYY-MM-dd)");

        jLabel5.setText("Ghi chú");

        jScrollPane1.setViewportView(txtPane);

        btnThem.setBackground(new java.awt.Color(102, 255, 153));
        btnThem.setText("Thêm");
        btnThem.setActionCommand("");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        btnXoa.setBackground(new java.awt.Color(51, 255, 153));
        btnXoa.setText("Xóa");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        btnSua.setBackground(new java.awt.Color(102, 255, 103));
        btnSua.setText("Sửa");
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5))
                        .addGap(22, 22, 22)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtMaHs)
                            .addComponent(txtTenHS)
                            .addComponent(txtNgaySinh)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                        .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnSua, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtMaHs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtTenHS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtNgaySinh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSua, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(41, 41, 41))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Xem danh sách học sinh"));

        table1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã HS", "Tên HS", "Ngày sinh", "Ghi chú"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                table1MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(table1);

        jLabel6.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel6.setText("ExtInfo");

        lbl_img.setBackground(new java.awt.Color(51, 255, 204));
        lbl_img.setForeground(new java.awt.Color(153, 255, 255));

        btnChoose.setBackground(new java.awt.Color(51, 255, 153));
        btnChoose.setText("Choose");
        btnChoose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChooseActionPerformed(evt);
            }
        });

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Search"));

        jLabel7.setText("Mã HS(* bắt buộc)");

        jLabel8.setText("Tên HS");

        jLabel9.setText("Ngày sinh(YYYY-MM-dd)");

        jScrollPane3.setViewportView(txtSearchGhiChu);

        jLabel10.setText("Ghi chú");

        btnSearch.setBackground(new java.awt.Color(0, 255, 102));
        btnSearch.setText("SEARCH");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnSearch)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9)
                            .addComponent(jLabel7)
                            .addComponent(jLabel10))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 189, Short.MAX_VALUE)
                            .addComponent(txtSearchMaHS)
                            .addComponent(txtSearchTenHS)
                            .addComponent(txtSearchNgaySinh))))
                .addContainerGap(38, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtSearchMaHS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txtSearchTenHS, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSearchNgaySinh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addGap(29, 29, 29)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnSearch)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 604, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnChoose))
                            .addComponent(lbl_img, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnChoose)
                            .addComponent(jLabel6))
                        .addGap(8, 8, 8)
                        .addComponent(lbl_img, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 533, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(24, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

        public ArrayList<HocSinh> createList(){
        ArrayList<HocSinh> arr = new ArrayList<HocSinh>();
          try {
            // connnect to database 'testdb'
            Connection conn = getConnection(DB_URL, USER_NAME, PASSWORD);
            // crate statement
            Statement stmt = conn.createStatement();
            // get data from table 'student'
            ResultSet rs = stmt.executeQuery("select * from HocSinh");
            // show data
            HocSinh o = null;
            while (rs.next()) {
                o = new HocSinh(rs.getInt(1), rs.getString(2), rs.getDate(3),  rs.getString(4), rs.getBytes(5));
                arr.add(o);
            }
            
            
            // close connection
            conn.close();
        } catch (Exception ex) {
            String err = ex.getMessage();
            if(err.equalsIgnoreCase("") == false)
                JOptionPane.showMessageDialog(null, ex.getMessage());
            ex.printStackTrace();
        }
        return arr;
       
    }
    
//    public  void show(){
//        ArrayList<HocSinh> list = createList();
//        DefaultTableModel model = (DefaultTableModel)table1.getModel();
//        Object[] row = new Object[4];
//        for (int i = 0; i < list.size(); i++) {
//            row[0] = list.get(i).getMaHS();
//            row[1] = list.get(i).getTenHS();
//            row[2] = list.get(i).getNgaySinh();
//            row[3] = list.get(i).getGhiChu();
//            
//            model.addRow(row);
//        }
//    }
    //khi ấn choose a image
    private void btnChooseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChooseActionPerformed
        // TODO add your handling code here:
        JFileChooser chooser = new JFileChooser();
        chooser.showOpenDialog(null);
        File f =  chooser.getSelectedFile();
        fileName = f.getAbsolutePath();
        
        ImageIcon imageIcon = new ImageIcon(new ImageIcon(fileName).getImage().getScaledInstance(lbl_img.getWidth(), lbl_img.getHeight(), Image.SCALE_SMOOTH));
        lbl_img.setIcon(imageIcon);
        
        File image = new File(fileName);
         BufferedInputStream bin = null;

        try (FileInputStream f2 = new FileInputStream(image)) {
            bin = new BufferedInputStream(f2);
            int a = bin.available();
             img = new byte[a];
             
            System.out.println(fileName);
//            FileOutputStream f1; //F là k ghi tiếp
//            f1 = new FileOutputStream("copy.png");
            ByteArrayOutputStream bos = new ByteArrayOutputStream();
                int i = 0;
                while((i = bin.read(img, 0, a))!= -1){
                    //f1.write((byte)i);
                    //f1.write(img, 0, a);
                    bos.write(img, 0, a);
//                    bos.writeTo(f1);
                   // System.out.println((char)(i));
            }
//                f1.close();
                f2.close();
                bin.close();
                bos.close();
        }catch(IOException e){
             JOptionPane.showMessageDialog(null, e);
        }
//        try {
//            File image = new File(fileName);
//            FileInputStream fis =  new FileInputStream(image);
//            int a = fis.available();
//            ByteArrayOutputStream bos = new ByteArrayOutputStream();
//            byte[] buf = new byte[a];
//            int i= 0;
//                    
//            while((i = fis.read(buf)) != 1){
////                bos.write(buf, 0, a);
////                bos.flush();
//                 System.out.println((char)(i));
//            }
//            //img = bos.toByteArray();
//            System.out.println("ok");
//        } catch (Exception e) {
//            JOptionPane.showMessageDialog(null, e);
//            //System.out.println("hinh qua lon!");
//        }
    }//GEN-LAST:event_btnChooseActionPerformed

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        try {
            // connnect to database 'testdb'
            Connection conn = getConnection(DB_URL, USER_NAME, PASSWORD);
            // crate statement
           
  
        Date date1 = null;
        try {
           date1 = HocSinh.formatter.parse(txtNgaySinh.getText());
        } catch (ParseException e) {
              JOptionPane.showMessageDialog(null, e);
        }
        //xử lí ngày
              java.sql.Date date2 = new java.sql.Date(date1.getTime());
              if(txtTenHS.getText().equals("") == false && txtPane.getText().equals("") == false){
                  
              
            String query = "insert into HocSinh values (?, ?, ?, ?)";
            PreparedStatement pst = conn.prepareStatement(query);
            pst.setString(1, txtTenHS.getText());
            pst.setDate(2, date2);
            pst.setString(3,  txtPane.getText() );
            pst.setBytes(4, img);
            pst.executeUpdate();
            JOptionPane.showMessageDialog(null, "thêm thành công!");
            //refresh 
            DefaultTableModel model = (DefaultTableModel)table1.getModel();
            model.setRowCount(0);
            ArrayList<HocSinh> list = createList();
//        DefaultTableModel model = (DefaultTableModel)table1.getModel();
        Object[] row = new Object[4];
        for (int i = 0; i < list.size(); i++) {
            row[0] = list.get(i).getMaHS();
            row[1] = list.get(i).getTenHS();
            row[2] = list.get(i).getNgaySinh();
            row[3] = list.get(i).getGhiChu();
            
            model.addRow(row);
        }
            
            txtTenHS.setText("");
            txtPane.setText("");
            txtMaHs.setText("");
            lbl_img.setText("");
            }else {
                   JOptionPane.showMessageDialog(null, "Bạn phải nhập tên và ghi chú!");
              }
            
            // close connection
            conn.close();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
    }//GEN-LAST:event_btnThemActionPerformed
//xu li khi click bên table
    private void table1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_table1MouseClicked
        int i = table1.getSelectedRow();
        TableModel model = table1.getModel();
        String t = String.valueOf(model.getValueAt(i, 0));
        String t1 = (String)model.getValueAt(i, 1);
        String t2 = (model.getValueAt(i, 2)).toString();
        String t3 = (String)model.getValueAt(i, 3);
       
        txtMaHs.setText(t);
        txtTenHS.setText(t1);
        txtNgaySinh.setText(t2);
        txtPane.setText(t3);
        
        byte[] buf = createList().get(i).getExtInfo();
        
        if(buf != null){
        ImageIcon imageIcon = new ImageIcon(new ImageIcon(buf).getImage().getScaledInstance(lbl_img.getWidth(), lbl_img.getHeight(), Image.SCALE_SMOOTH));
        lbl_img.setIcon(imageIcon);
        //set lại hình khi update nếu k update nó lấy hình cũ
        img = buf;
        }else{
            lbl_img.setIcon(null);
        }
    }//GEN-LAST:event_table1MouseClicked

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        try {
            // connnect to database 'testdb'
            Connection conn = getConnection(DB_URL, USER_NAME, PASSWORD);
            // crate statement
            Statement stmt = conn.createStatement();
            // get data from table 'student'
            int row1 = table1.getSelectedRow();
            String MaHS = String.valueOf(table1.getModel().getValueAt(row1, 0));
            String query = "update HocSinh set TenHS = ?, NgaySinh = ?, GhiChu = ?, ExtInfo = ? where MaHS = " + MaHS; //có thể lấy MHS trực tiếp cx dk
            Date date1 = null;
            try {
               date1 = HocSinh.formatter.parse(txtNgaySinh.getText());
            } catch (ParseException e) {
                  JOptionPane.showMessageDialog(null, e);
            }
        //xử lí ngày
            java.sql.Date date2 = new java.sql.Date(date1.getTime());
              if(txtTenHS.getText().equals("") == false && txtPane.getText().equals("") == false){
            PreparedStatement pst = conn.prepareStatement(query);
            pst.setString(1, txtTenHS.getText());
            pst.setDate(2, date2);
            pst.setString(3,  txtPane.getText() );
            //nếu k chọn lại hình thì nó sẽ báo
            if(img == null){
                JOptionPane.showMessageDialog(null, "Hình có thể không được lưu vì vậy bạn cần chọn lại hình bằng các bấm nút choose");
            }
            pst.setBytes(4, img);
            pst.executeUpdate();
            
             //refresh 
            DefaultTableModel model = (DefaultTableModel)table1.getModel();
            model.setRowCount(0);
            ArrayList<HocSinh> list = createList();
//        DefaultTableModel model = (DefaultTableModel)table1.getModel();
        Object[] row = new Object[4];
        for (int i = 0; i < list.size(); i++) {
            row[0] = list.get(i).getMaHS();
            row[1] = list.get(i).getTenHS();
            row[2] = list.get(i).getNgaySinh();
            row[3] = list.get(i).getGhiChu();
            
            model.addRow(row);
        }
            JOptionPane.showMessageDialog(null, "sửa thành công!");
             txtTenHS.setText("");
            txtPane.setText("");
            txtMaHs.setText("");
            lbl_img.setText("");
              }else {
                   JOptionPane.showMessageDialog(null, "Bạn phải nhập tên và ghi chú!");
              }
            // close connection
            conn.close();
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_btnSuaActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
       int opt = JOptionPane.showConfirmDialog(null, "Bạn có muốn xóa không?", "Xóa", JOptionPane.YES_NO_OPTION);
       if(opt == 0){
        try {
            // connnect to database 'testdb'
            Connection conn = getConnection(DB_URL, USER_NAME, PASSWORD);
            
            
            // get data from table 'student'
            int row1 = table1.getSelectedRow();
            String MaHS = String.valueOf(table1.getModel().getValueAt(row1, 0));
            String query = "delete from HocSinh where MaHS = " + MaHS;
           
            PreparedStatement pst = conn.prepareStatement(query);
            pst.executeUpdate();
            
             //refresh 
            DefaultTableModel model = (DefaultTableModel)table1.getModel();
            model.setRowCount(0);
            ArrayList<HocSinh> list = createList();
//        DefaultTableModel model = (DefaultTableModel)table1.getModel();
        Object[] row = new Object[4];
        for (int i = 0; i < list.size(); i++) {
            row[0] = list.get(i).getMaHS();
            row[1] = list.get(i).getTenHS();
            row[2] = list.get(i).getNgaySinh();
            row[3] = list.get(i).getGhiChu();
            
            model.addRow(row);
        }
            JOptionPane.showMessageDialog(null, "xóa thành công!");
             txtTenHS.setText("");
            txtPane.setText("");
            txtMaHs.setText("");
            lbl_img.setText("");
            //set icon lại
            lbl_img.setIcon(null);
            // close connection
            conn.close();
        } catch (Exception ex) {
            ex.printStackTrace();
        }
       }
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        if(txtSearchMaHS.getText().equals("") == false){
 // bắt buộc phải có Mã HS
        try {
            // connnect to database 'testdb'
            Connection conn = getConnection(DB_URL, USER_NAME, PASSWORD);
            
            
            // get data from table 'student'
          
            String query = "select * from HocSinh where";// MaHS = " + txtSearchMaHS.getText();
            if(txtSearchMaHS.getText().equals("") == false)
            {
                query += " MaHS = " + txtSearchMaHS.getText();
            }
            if(txtSearchTenHS.getText().equals("") == false)
            {
                
                query += " and TenHS = N\'" + txtSearchTenHS.getText() + "\'";
            }
            if(txtSearchNgaySinh.getText().equals("") == false)
            {
                query += " and NgaySinh = N\'" + txtSearchNgaySinh.getText() + "\'";
            }
            if(txtSearchGhiChu.getText().equals("") == false)
            {
                query += " and GhiChu = N\'" + txtSearchGhiChu.getText() + "\'";
            }
            PreparedStatement pst = conn.prepareStatement(query);
            ResultSet rs = pst.executeQuery();
            // show data
           boolean kiemtra = false;
            while (rs.next()) {
                kiemtra = true;
//                System.out.println(rs.getInt(1) + "  " + rs.getString(2) 
//                        + "  " + rs.getString(3)) ;
                  txtMaHs.setText(String.valueOf(rs.getInt(1)));
                  txtTenHS.setText(rs.getString(2));
                  String strDate = HocSinh.formatter.format(rs.getDate(3));
                  txtNgaySinh.setText(strDate);
                  txtPane.setText(rs.getString(4));
                  byte[] buf = rs.getBytes(5);
                  if(buf != null){
                    ImageIcon imageIcon = new ImageIcon(new ImageIcon(buf).getImage().getScaledInstance(lbl_img.getWidth(), lbl_img.getHeight(), Image.SCALE_SMOOTH));
                    lbl_img.setIcon(imageIcon);
                    //set lại hình khi update nếu k update nó lấy hình cũ
                    img = buf;
                    }else{
                        lbl_img.setIcon(null);
        }
            JOptionPane.showMessageDialog(null, "Tìm thành công!");
        }
             if(rs.next() == false && kiemtra == false){
                JOptionPane.showMessageDialog(null, "Không có học sinh đó");
            }
            txtSearchMaHS.setText("");
            txtSearchTenHS.setText("");
            txtSearchNgaySinh.setText("");
            txtSearchGhiChu.setText("");
            
            
            // close connection
            conn.close();
        } catch (Exception ex) {
           JOptionPane.showMessageDialog(null, ex);
        }
        }else{
            JOptionPane.showMessageDialog(null, "Bạn không được bỏ trống Mã HS, mời bạn nhập lại");
             txtSearchMaHS.setText("");
            txtSearchTenHS.setText("");
            txtSearchNgaySinh.setText("");
            txtSearchGhiChu.setText("");
        }
    }//GEN-LAST:event_btnSearchActionPerformed

    private void unameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_unameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_unameActionPerformed

    private void ConnectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ConnectActionPerformed
        DB_URL = url.getText() + "integratedSecurity=true";
        USER_NAME = uname.getText();
        PASSWORD = pass.getText();
            //hien thi ds hs
        // show();
        
        ArrayList<HocSinh> list = createList();
        if(checkconn == true){
             JOptionPane.showMessageDialog(null, "Connect successfully, your connection link ís: " + DB_URL + " username is: " + USER_NAME + " password is: "+ PASSWORD);
        }else
        {
            JOptionPane.showMessageDialog(null, "Connect failed, your connection link ís: " + DB_URL + " username is: " + USER_NAME + " passwword is: "+ PASSWORD);
        }
        DefaultTableModel model = (DefaultTableModel)table1.getModel();
        Object[] row = new Object[4];
        for (int i = 0; i < list.size(); i++) {
            row[0] = list.get(i).getMaHS();
            row[1] = list.get(i).getTenHS();
            row[2] = list.get(i).getNgaySinh();
            row[3] = list.get(i).getGhiChu();
            
            model.addRow(row);
        }
    }//GEN-LAST:event_ConnectActionPerformed

    private void urlActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_urlActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_urlActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Bai1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Bai1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Bai1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Bai1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Bai1().setVisible(true);
            }
        });
        
//        try {
//            // connnect to database 'testdb'
//            Connection conn = getConnection(DB_URL, USER_NAME, PASSWORD);
//            // crate statement
//            Statement stmt = conn.createStatement();
//            // get data from table 'student'
//            ResultSet rs = stmt.executeQuery("select * from HocSinh");
//            // show data
//            while (rs.next()) {
//                System.out.println(rs.getInt(1) + "  " + rs.getString(2) 
//                        + "  " + rs.getString(3)) ;
//            }
//            
//            
//            // close connection
//            conn.close();
//        } catch (Exception ex) {
//            ex.printStackTrace();
//        }
    }
    


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Connect;
    private javax.swing.JButton btnChoose;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnXoa;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lbl_img;
    private javax.swing.JTextField pass;
    private javax.swing.JTable table1;
    private javax.swing.JTextField txtMaHs;
    private javax.swing.JTextField txtNgaySinh;
    private javax.swing.JTextPane txtPane;
    private javax.swing.JTextPane txtSearchGhiChu;
    private javax.swing.JTextField txtSearchMaHS;
    private javax.swing.JTextField txtSearchNgaySinh;
    private javax.swing.JTextField txtSearchTenHS;
    private javax.swing.JTextField txtTenHS;
    private javax.swing.JTextField uname;
    private javax.swing.JTextField url;
    // End of variables declaration//GEN-END:variables
}
